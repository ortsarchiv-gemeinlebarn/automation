name: OAG CI & CD Workflows - Test & Production Environment

on:
  workflow_call 

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      deployTest: ${{ steps.setup.outputs.DEPLOY_TEST }}
      deployProduction: ${{ steps.setup.outputs.DEPLOY_PRODUCTION }}
    steps:
      - id: setup
        name: Evaluate Deployment Strategy
        run: |
          echo "DEPLOY_TEST=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/bugfix/') }}" >> "$GITHUB_OUTPUT"
          echo "DEPLOY_PRODUCTION=${{ (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) || github.ref == 'refs/heads/main' }}" >> "$GITHUB_OUTPUT"

      - name: Result
        run: |
          echo DEPLOY_TEST: ${{ steps.setup.outputs.DEPLOY_TEST }}
          echo DEPLOY_PRODUCTION: ${{ steps.setup.outputs.DEPLOY_PRODUCTION }}
  

  # Test Environment

  build-test:
    name: "Test / Build"
    runs-on: windows-latest
    needs: prepare
    if: ${{ needs.prepare.outputs.deployTest == 'true' }}
    steps:
      - name: Do something
        run: echo 'Build Test'

  deploy-test:
    name: "Test / Deploy"
    needs: build-test
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Do something
        run: echo 'Deploy Test'
  
  # Production Environment

  build-production:
    name: "Production / Build"
    runs-on: windows-latest
    needs: prepare
    if: ${{ needs.prepare.outputs.deployProduction == 'true' }}
    steps:
      - name: Do something
        run: echo 'Build Production'

  deploy-production:
    name: "Production / Deploy"
    needs: build-production
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Do something
        run: echo 'Deploy Production'
